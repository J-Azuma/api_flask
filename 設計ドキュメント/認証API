① APIの利用ケース
・ SPAから呼び出す(メールアドレス・パスワードの一般的な認証方法)
・ 個人利用
・ 一般公開や外部サービスからの利用は考慮しない

⇒ SPAのバックエンドとしての役割に徹するのであれば開発主体は同一である場合がほとんど
⇒ SPAとAPIが単一のアプリケーションを構成するので、APIがステートレスである必要はなく、
ステートフルなAPIとしてセッションCookieを発行し、サーバサイド(あるいはインメモリデータベース等)
でセッション管理する方がセキュアな実装にしやすい(ほんまか？)

・ HttpOnlyなCookieでセッションを扱えるので、JavaScriptで剽窃されにくい
・ サーバサイドで利用者ごとにセッションデータを保持するので特定利用者のセッションを無効化できる


結論： ステートフルなAPIとして実装し、JWTまたはSessionを用いてログイン状態を管理する
② 実装方針検討

⑴ 認証方法をどうするか
   - 
   - 
　　
⑵ アクセストークンをどう管理するか


⑶ アクセストークンをどう引き回すか
   - 
⑷ アクセストークンをどう保持するか


